<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>net.cynipe.example</groupId>
  <artifactId>maven-appassembler-example</artifactId>
  <version>0.0.1-SNAPSHOT</version>
  <name>Maven Appassembler Plugin Usage Example</name>
  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <java.version>1.6</java.version>
  </properties>
  <build>
    <!--
      成果物のzipから実行する場合はsrc/main/config/logback.xmlのものを使うようにするため、
      2重に登録しないようにjarからは省く。
    -->
    <resources>
      <resource>
        <directory>src/main/resources</directory>
        <excludes>
          <exclude>logback.xml</exclude>
        </excludes>
      </resource>
    </resources>
    <!-- 共通に利用する設定とpluginのバージョンの指定 -->
    <pluginManagement>
      <plugins>
        <plugin>
          <artifactId>maven-resources-plugin</artifactId>
          <version>2.4.1</version>
        </plugin>
        <plugin>
          <artifactId>maven-dependency-plugin</artifactId>
          <version>2.1</version>
        </plugin>
        <plugin>
          <artifactId>maven-jar-plugin</artifactId>
          <version>2.3.1</version>
        </plugin>
        <plugin>
          <artifactId>maven-clean-plugin</artifactId>
          <version>2.4.1</version>
        </plugin>
        <plugin>
          <artifactId>maven-source-plugin</artifactId>
          <version>2.1.2</version>
          <executions>
            <execution>
              <id>attach-sources</id>
              <goals>
                <goal>jar-no-fork</goal>
              </goals>
              <phase>package</phase>
            </execution>
          </executions>
        </plugin>
        <plugin>
          <artifactId>maven-compiler-plugin</artifactId>
          <version>2.3.2</version>
          <configuration>
            <encoding>${project.build.sourceEncoding}</encoding>
            <source>${java.version}</source>
            <target>${java.version}</target>
          </configuration>
        </plugin>
        <plugin>
          <artifactId>maven-eclipse-plugin</artifactId>
          <version>2.8</version>
          <configuration>
            <downloadSources>true</downloadSources>
            <classpathContainers>
              <classpathContainer>org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-${java.version}</classpathContainer>
            </classpathContainers>
          </configuration>
        </plugin>
      </plugins>
    </pluginManagement>
    <plugins>
      <!-- default plugins -->
      <plugin>
        <artifactId>maven-eclipse-plugin</artifactId>
      </plugin>
      <plugin>
        <artifactId>maven-source-plugin</artifactId>
      </plugin>
      <plugin>
        <artifactId>maven-resources-plugin</artifactId>
      </plugin>
      <plugin>
        <artifactId>maven-dependency-plugin</artifactId>
      </plugin>
      <plugin>
        <artifactId>maven-compiler-plugin</artifactId>
      </plugin>
      <!-- 実行ファイル自動生成 -->
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>appassembler-maven-plugin</artifactId>
        <version>1.1</version>
        <configuration>
          <!-- 起動対象クラスの指定 -->
          <programs>
            <program>
              <mainClass>net.cynipe.example.maven.appassembler.Main</mainClass>
              <!-- 生成されるスクリプト名 -->
              <name>run-example</name>
            </program>
          </programs>
          <!--
            maven-assembly-pluginでも依存ライブラリは詰め込めるのでこちらで扱うかが悩ましいところ。
            ただmaven-assembly-pluginにはパッケージングだけ任せたほうが分かりやすいかなー？
          -->
          <repositoryName>lib</repositoryName>
          <repositoryLayout>flat</repositoryLayout>
          <generateRepository>true</generateRepository>
          <!-- 設定ファイルのコピー -->
          <copyConfigurationDirectory>true</copyConfigurationDirectory>
        </configuration>
        <executions>
          <execution>
            <id>gen-script</id>
            <phase>package</phase>
            <goals>
              <goal>assemble</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <!-- zipファイル生成用設定 -->
      <plugin>
        <artifactId>maven-assembly-plugin</artifactId>
        <version>2.2</version>
        <configuration>
          <descriptors>
            <descriptor>src/main/assembly/bin.xml</descriptor>
          </descriptors>
          <!--
            maven-assembly-pluginではDescriptorXML(ここではsrc/main/assembly/bin.xml)で
            filterdをtrueに指定してもプロジェクトが本来持っているプロパティは引き渡されず置換してくれない。
            ここでfiltersを利用して値を引渡し"かつDescriptorXML内で"filterdをtrueにしておくと
            assembly:assemblyのタイミングで良きに計らってくれる。
          -->
          <filters>
            <!-- ${basedir}を含めた形でないと扱ってくれない -->
            <filter>${basedir}/src/main/config/config.xml</filter>
            <filter>${basedir}/src/main/config/logback.xml</filter>
          </filters>
        </configuration>
        <executions>
          <execution>
            <id>make-assembly</id>
            <phase>package</phase>
            <goals>
              <goal>single</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>
  <dependencyManagement>
    <dependencies>
      <dependency>
        <groupId>ch.qos.logback</groupId>
        <artifactId>logback-classic</artifactId>
        <version>0.9.21</version>
      </dependency>
    </dependencies>
  </dependencyManagement>
  <dependencies>
    <dependency>
      <groupId>ch.qos.logback</groupId>
      <artifactId>logback-classic</artifactId>
    </dependency>
  </dependencies>
</project>