<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>cynipe</groupId>
  <artifactId>jenkins-study</artifactId>
  <packaging>war</packaging>
  <version>1.0-SNAPSHOT</version>
  <build>
    <resources>
      <resource>
        <directory>src/main/resources</directory>
        <!-- 置換機能を有効化 -->
        <filtering>true</filtering>
      </resource>
    </resources>
  </build>
  <profiles>
    <profile>
      <id>develop</id>
      <activation>
        <activeByDefault>true</activeByDefault>
      </activation>
      <properties>
        <jdbc.url>jdbc:postgresql://develop:5432/database</jdbc.url>
        <jdbc.user>develop</jdbc.user>
        <jdbc.password>develop</jdbc.password>
      </properties>
      <build>
        <resources>
          <resource>
            <directory>src/main/profiled-resources/develop</directory>
          </resource>
        </resources>
      </build>
    </profile>
    <!-- ステージング -->
    <profile>
      <id>staging</id>
      <properties>
        <jdbc.url>jdbc:postgresql://staging:5432/database</jdbc.url>
        <jdbc.user>staging</jdbc.user>
        <jdbc.password>staging</jdbc.password>
      </properties>
      <build>
        <resources>
          <resource>
            <directory>src/main/profiled-resources/staging</directory>
          </resource>
        </resources>
      </build>
    </profile>
    <!-- 本番 -->
    <profile>
      <id>production</id>
      <properties>
        <jdbc.url>jdbc:postgresql://production:5432/database</jdbc.url>
        <jdbc.user>production</jdbc.user>
        <jdbc.password>production</jdbc.password>
      </properties>
      <build>
        <resources>
          <resource>
            <directory>src/main/profiled-resources/production</directory>
          </resource>
        </resources>
      </build>
    </profile>
    <!-- Build情報の埋め込み -->
    <profile>
      <id>build-info</id>
      <!-- Jenkinsのビルド時に持っている変数なのでそれをトリガーに利用する -->
      <activation>
        <property>
          <name>BUILD_ID</name>
        </property>
      </activation>
      <build>
      <plugins>
        <plugin>
          <artifactId>maven-jar-plugin</artifactId>
          <configuration>
            <archive>
              <manifestEntries>
                <Svn-Revision>${SVN_REVISION}</Svn-Revision>
                <Build-Tag>${BUILD_TAG}</Build-Tag>
                <Build-Number>${BUILD_NUMBER}</Build-Number>
                <Build-Id>${BUILD_ID}</Build-Id>
              </manifestEntries>
            </archive>
          </configuration>
        </plugin>
        <plugin>
          <artifactId>maven-war-plugin</artifactId>
          <configuration>
            <archive>
              <manifestEntries>
                <Svn-Revision>${SVN_REVISION}</Svn-Revision>
                <Build-Tag>${BUILD_TAG}</Build-Tag>
                <Build-Number>${BUILD_NUMBER}</Build-Number>
                <Build-Id>${BUILD_ID}</Build-Id>
              </manifestEntries>
            </archive>
          </configuration>
        </plugin>
      </plugins>
    </build>
    </profile>
  </profiles>
  <!--
    Coverage取得サンプルコード用のライブラリ
    ここにemma-maven-pluginの設定を記述しなくても
    JenkinsのEmma Pluginを有効にし、emma:emmaとすることで利用することが出来る
   -->
  <dependencies>
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>4.8.2</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.hamcrest</groupId>
      <artifactId>hamcrest-all</artifactId>
      <version>1.1</version>
      <scope>test</scope>
    </dependency>
  </dependencies>
</project>
